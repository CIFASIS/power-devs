Coupled
    {
    Type = Root
    Name = queue_processor
    Ports = 0; 0
    Description = 
    Graphic
        {
        Position = 0; 0
        Dimension = 0; 0
        Direction = Right
        Color = 15
        Icon = 
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Atomic
            {
            Name = Scilab Command0
            Ports = 1 ; 0
            Path = Hybrid\runscilabjob.h
            Description = Runs Scilab commands at Init, Exit and when receive events.
            Graphic
                {
                Position = -5055 ; -1455
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sinks%scilab.ico
                }
            Parameters
                {
                Run at Init = Str; tev=cumsum(rand(1,200)),uev=ones(1,200) ; Scilab Job at Init
                Run at External = Str;  ; Scilab Job when receive event
                Run at Exit = Str;  ; Scilab Job at Exit
                }
            }
        Atomic
            {
            Name = Ready
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -1935 ; -810
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 1 ; Initial tokens at place  (Scilab expression)
                time = Str; 0 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Queue
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = -1860 ; 1065
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 4 ; Initial tokens at place  (Scilab expression)
                time = Str; 0 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Start
            Ports = 2 ; 1
            Path = petri/transition.h
            Description = Transition of a Petri Net
            Graphic
                {
                Position = 285 ; 915
                Dimension = 180 ; 720
                Direction = Right
                Color = 1
                Icon = None
                }
            Parameters
                {
                time = Str; 0 ; Firing time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = Processor
            Ports = 1 ; 1
            Path = petri\place.h
            Description = Place of a Petri Net
            Graphic
                {
                Position = 1440 ; 915
                Dimension = 720 ; 720
                Direction = Right
                Color = 15
                Icon = %petrinets%place.svg
                }
            Parameters
                {
                tokens = Str; 0 ; Initial tokens at place  (Scilab expression)
                time = Str; 0.55 ; waiting time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = End
            Ports = 1 ; 1
            Path = petri/transition.h
            Description = Transition of a Petri Net
            Graphic
                {
                Position = 3285 ; 915
                Dimension = 180 ; 720
                Direction = Right
                Color = 1
                Icon = None
                }
            Parameters
                {
                time = Str; 0 ; Firing time  (Scilab expression)
                Inputs = Str; %Inputs ; Number of input
                }
            }
        Atomic
            {
            Name = GnuPlot0
            Ports = 3 ; 0
            Path = sinks/gnuplot.h
            Description = Plot input signal using GnuPlot
            Graphic
                {
                Position = 4845 ; 3315
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %sinks%gnuplot.svg
                }
            Parameters
                {
                Inputs = Str; %Inputs ; Number of inputs
                Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                Format1 = Str; with steps title 'Queue length' ; Formatting options for input 1
                Format2 = Str; with impulses  title 'Arrivals' ; Formatting options for input 2
                Format3 = Str; with impulses  title 'Completed' ; Formatting options for input 3
                Format4 = Str;  ; Formatting options for input 4
                Format5 = Str;  ; Formatting options for input 5
                }
            }
        Atomic
            {
            Name = Arrive
            Ports = 1 ; 1
            Path = petri\event_triggered_transition.h
            Description = Event Triggered transition of a Petri Net
            Graphic
                {
                Position = -3015 ; 1065
                Dimension = 180 ; 720
                Direction = Right
                Color = 15
                Icon = None
                }
            Parameters
                {
                }
            }
        Atomic
            {
            Name = From Workspace0
            Ports = 0 ; 1
            Path = sources/fromworkspace.h
            Description = Reads an input signal from Scilab Workspace
            Graphic
                {
                Position = -4755 ; 1095
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sources%workspace.bmp
                }
            Parameters
                {
                Time variable = Str; tev ; 
                Signal = Str; uev ; 
                Method = Lst; 1%QSS%QSS2/3% ; 
                }
            }
        Point
            {
            ConectedLines = 1 ; 6 ; 7
            ConectedExtrems = Org ; Org ; Org
            Position = -825 ; 1425
            }
        Point
            {
            ConectedLines = 9 ; 10 ; 11
            ConectedExtrems = Org ; Org ; Org
            Position = -3525 ; 1425
            }
        Point
            {
            ConectedLines = 2 ; 12 ; 13
            ConectedExtrems = Org ; Org ; Org
            Position = -675 ; -450
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Pnt ;  1 ; -1 ; 0
            PointX = -975 ; -975 ; -825
            PointY = 1425 ; 1425 ; 1425
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Pnt ;  3 ; -1 ; 0
            PointX = -1050 ; -1050 ; -675
            PointY = -450 ; -450 ; -450
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  5 ;  1 ; -1
            PointX = 600 ; 600 ; 1260
            PointY = 1275 ; 1275 ; 1275
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  6 ;  1 ; -1
            PointX = 2325 ; 2325 ; 3135
            PointY = 1275 ; 1275 ; 1275
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; 0
            Sink = Cmp ;  2 ;  1 ; -1
            PointX = 3600 ; 3600 ; 4125 ; 4125 ; -2250 ; -2250 ; -2115
            PointY = 1275 ; 1275 ; 1275 ; -1125 ; -1125 ; -450 ; -450
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; -1
            Sink = Pnt ;  1 ; -1 ; 0
            PointX = 4710 ; -825 ; -825
            PointY = 3450 ; 3450 ; 1425
            }
        Line
            {
            Source = Pnt ;  1 ; -1 ; 0
            Sink = Cmp ;  4 ;  2 ; -1
            PointX = -825 ; -825 ; 135
            PointY = 1425 ; 1425 ; 1425
            }
        Line
            {
            Source = Cmp ;  8 ;  1 ; 0
            Sink = Cmp ;  3 ;  1 ; -1
            PointX = -2700 ; -2040 ; -2040
            PointY = 1425 ; 1425 ; 1425
            }
        Line
            {
            Source = Cmp ;  9 ;  1 ; 0
            Sink = Pnt ;  2 ; -1 ; 0
            PointX = -3975 ; -3975 ; -3525
            PointY = 1425 ; 1425 ; 1425
            }
        Line
            {
            Source = Cmp ;  7 ;  2 ; -1
            Sink = Pnt ;  2 ; -1 ; 0
            PointX = 4710 ; -3525 ; -3525
            PointY = 3675 ; 3675 ; 1425
            }
        Line
            {
            Source = Pnt ;  2 ; -1 ; 0
            Sink = Cmp ;  8 ;  1 ; -1
            PointX = -3525 ; -3165 ; -3165
            PointY = 1425 ; 1425 ; 1425
            }
        Line
            {
            Source = Cmp ;  7 ;  3 ; -1
            Sink = Pnt ;  3 ; -1 ; 0
            PointX = 4710 ; -675 ; -675
            PointY = 3900 ; 3900 ; -450
            }
        Line
            {
            Source = Pnt ;  3 ; -1 ; 0
            Sink = Cmp ;  4 ;  1 ; -1
            PointX = -675 ; -300 ; -300 ; 135
            PointY = -450 ; -450 ; 1125 ; 1125
            }
        }
    }
