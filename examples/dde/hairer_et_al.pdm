Coupled
    {
    Type = Root
    Name = hairer_et_al
    Ports = 0; 0
    Description = Model of Power Devs
    Graphic
        {
        Position = 0; 0
        Dimension = 120; 120
        Direction = Right
        Color = 15
        Icon = None
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Atomic
            {
            Name = QSS Integrator0
            Ports = 1 ; 1
            Path = qss/qss_integrator.h
            Description = Quantized Integrator (QSS methods) with logartithmic quantization
            Graphic
                {
                Position = 5670 ; -1755
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%integrator.svg
                }
            Parameters
                {
                Method = Lst; 3%QSS%QSS2%QSS3%QSS4%BQSS%CQSS%LIQSS%LIQSS2%LIQSS3% ; 
                dqmin = Str; 1e-6 ; minimum quantum (Scilab)
                dqrel = Str; 1e-3 ; relative quantum (0 : uniform) (Scilab)
                x0 = Str; 5 ; Initial state (Scilab)
                }
            }
        Atomic
            {
            Name = QSS Integrator1
            Ports = 1 ; 1
            Path = qss/qss_integrator.h
            Description = Quantized Integrator (QSS methods) with logartithmic quantization
            Graphic
                {
                Position = 5670 ; -30
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%integrator.svg
                }
            Parameters
                {
                Method = Lst; 3%QSS%QSS2%QSS3%QSS4%BQSS%CQSS%LIQSS%LIQSS2%LIQSS3% ; 
                dqmin = Str; 1e-6 ; minimum quantum (Scilab)
                dqrel = Str; 1e-3 ; relative quantum (0 : uniform) (Scilab)
                x0 = Str; 0.1 ; Initial state (Scilab)
                }
            }
        Atomic
            {
            Name = QSS Integrator 2
            Ports = 1 ; 1
            Path = qss/qss_integrator.h
            Description = Quantized Integrator (QSS methods) with logartithmic quantization
            Graphic
                {
                Position = 5670 ; 1695
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%integrator.svg
                }
            Parameters
                {
                Method = Lst; 3%QSS%QSS2%QSS3%QSS4%BQSS%CQSS%LIQSS%LIQSS2%LIQSS3% ; 
                dqmin = Str; 1e-6 ; minimum quantum (Scilab)
                dqrel = Str; 1e-3 ; relative quantum (0 : uniform) (Scilab)
                x0 = Str; 1 ; Initial state (Scilab)
                }
            }
        Atomic
            {
            Name = WSum 0
            Ports = 2 ; 1
            Path = qss/qss_wsum.h
            Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
            Graphic
                {
                Position = 3870 ; -1785
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %continuous%sum.svg
                }
            Parameters
                {
                K[0] = Str; -1 ; 
                K[1] = Str; 1 ; 
                K[2] = Str; 0 ; 
                K[3] = Str; 0 ; 
                K[4] = Str; 0 ; 
                K[5] = Str; 0 ; 
                K[6] = Str; 0 ; 
                K[7] = Str; 0 ; 
                Inputs = Str; %Inputs ; 
                }
            }
        Atomic
            {
            Name = WSum 1
            Ports = 2 ; 1
            Path = qss/qss_wsum.h
            Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
            Graphic
                {
                Position = 4020 ; -60
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %continuous%sum.svg
                }
            Parameters
                {
                K[0] = Str; 1 ; 
                K[1] = Str; -1 ; 
                K[2] = Str; 0 ; 
                K[3] = Str; 0 ; 
                K[4] = Str; 0 ; 
                K[5] = Str; 0 ; 
                K[6] = Str; 0 ; 
                K[7] = Str; 0 ; 
                Inputs = Str; %Inputs ; 
                }
            }
        Atomic
            {
            Name = WSum 2
            Ports = 2 ; 1
            Path = qss/qss_wsum.h
            Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
            Graphic
                {
                Position = 4095 ; 1665
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %continuous%sum.svg
                }
            Parameters
                {
                K[0] = Str; 1 ; 
                K[1] = Str; -1 ; 
                K[2] = Str; 0 ; 
                K[3] = Str; 0 ; 
                K[4] = Str; 0 ; 
                K[5] = Str; 0 ; 
                K[6] = Str; 0 ; 
                K[7] = Str; 0 ; 
                Inputs = Str; %Inputs ; 
                }
            }
        Atomic
            {
            Name = Multiplier 0
            Ports = 2 ; 1
            Path = qss/qss_multiplier_step.h
            Description = Multiplier. (QSS1 to 4)
            Graphic
                {
                Position = 9120 ; -705
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%multiplier.svg
                }
            Parameters
                {
                Advance method = Lst; 1%Purely static%Estimate step% ; 
                dQmin = Str; 1e-6 ; 
                dQrel = Str; 1e-3 ; 
                }
            }
        Atomic
            {
            Name = Variable Delay 0
            Ports = 2 ; 1
            Path = qss/dqssv2o3.h
            Description = Variable Delay function (QSS methods). y(t)=u1(t-u2(t))
            Graphic
                {
                Position = 7470 ; -555
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%vdelay.svg
                }
            Parameters
                {
                Delay = Str; 1 ; Delay time (Scilab)
                History = Str; 0.1 ; Data History (Scilab)
                }
            }
        Atomic
            {
            Name = Variable Delay 1
            Ports = 2 ; 1
            Path = qss/dqssv2o3.h
            Description = Variable Delay function (QSS methods). y(t)=u1(t-u2(t))
            Graphic
                {
                Position = 7545 ; 795
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%vdelay.svg
                }
            Parameters
                {
                Delay = Str; 10 ; Delay time (Scilab)
                History = Str; 0.1 ; Data History (Scilab)
                }
            }
        Atomic
            {
            Name = GnuPlot 0
            Ports = 3 ; 0
            Path = sinks/gnuplot.h
            Description = Plot input signal using GnuPlot
            Graphic
                {
                Position = 11295 ; 240
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %sinks%gnuplot.svg
                }
            Parameters
                {
                Inputs = Str; %Inputs ; Number of inputs
                Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                Format1 = Str; with lines title 'x1' ; Formatting options for input 1
                Format2 = Str; with lines title 'x2' ; Formatting options for input 2
                Format3 = Str; with lines title 'x3' ; Formatting options for input 3
                Format4 = Str;  ; Formatting options for input 4
                Format5 = Str;  ; Formatting options for input 5
                }
            }
        Atomic
            {
            Name = Constant 0
            Ports = 0 ; 1
            Path = sources\constant_sci.h
            Description = Constant
            Graphic
                {
                Position = 1620 ; -705
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sources%constant.svg
                }
            Parameters
                {
                K = Str; 1 ; Constant output value (Scilab expression)
                }
            }
        Atomic
            {
            Name = Constant 1
            Ports = 0 ; 1
            Path = sources\constant_sci.h
            Description = Constant
            Graphic
                {
                Position = 1395 ; 645
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sources%constant.svg
                }
            Parameters
                {
                K = Str; 10 ; Constant output value (Scilab expression)
                }
            }
        Point
            {
            ConectedLines = 7 ; 8 ; 9
            ConectedExtrems = Org ; Org ; Org
            Position = 3375 ; -1575
            }
        Point
            {
            ConectedLines = 4 ; 11 ; 22
            ConectedExtrems = Org ; Org ; Org
            Position = 6900 ; 300
            }
        Point
            {
            ConectedLines = 10 ; 13 ; 15
            ConectedExtrems = Org ; Org ; Org
            Position = 6900 ; 1200
            }
        Point
            {
            ConectedLines = 12 ; 14 ; 15
            ConectedExtrems = Org ; Org ; Org
            Position = 3375 ; 1200
            }
        Point
            {
            ConectedLines = 16 ; 17 ; 18
            ConectedExtrems = Org ; Org ; Org
            Position = 3000 ; 2175
            }
        Point
            {
            ConectedLines = 5 ; 19 ; 20
            ConectedExtrems = Org ; Org ; Org
            Position = 8550 ; -1125
            }
        Point
            {
            ConectedLines = 13 ; 21 ; 22
            ConectedExtrems = Org ; Org ; Org
            Position = 6900 ; 525
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  1 ;  1 ; -1
            PointX = 4650 ; 4650 ; 5535
            PointY = -1425 ; -1425 ; -1425
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; 0
            Sink = Cmp ;  2 ;  1 ; -1
            PointX = 4800 ; 4800 ; 5535
            PointY = 300 ; 300 ; 300
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; 0
            Sink = Cmp ;  3 ;  1 ; -1
            PointX = 4875 ; 4875 ; 5535
            PointY = 2025 ; 2025 ; 2025
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Pnt ;  2 ; -1 ; 0
            PointX = 6450 ; 6450 ; 6900
            PointY = 300 ; 300 ; 300
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Pnt ;  6 ; -1 ; 0
            PointX = 6450 ; 8325 ; 8550 ; 8550
            PointY = -1425 ; -1425 ; -1425 ; -1125
            }
        Line
            {
            Source = Cmp ;  8 ;  1 ; 0
            Sink = Cmp ;  7 ;  2 ; -1
            PointX = 8250 ; 8250 ; 8985
            PointY = -225 ; -225 ; -225
            }
        Line
            {
            Source = Cmp ;  7 ;  1 ; 0
            Sink = Pnt ;  1 ; -1 ; 0
            PointX = 9900 ; 9900 ; 3375 ; 3375
            PointY = -375 ; -2100 ; -2100 ; -1575
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; -1
            Sink = Pnt ;  1 ; -1 ; 0
            PointX = 3885 ; 3375 ; 3375
            PointY = 150 ; 150 ; -1575
            }
        Line
            {
            Source = Pnt ;  1 ; -1 ; 0
            Sink = Cmp ;  4 ;  1 ; -1
            PointX = 3375 ; 3375 ; 3735
            PointY = -1575 ; -1575 ; -1575
            }
        Line
            {
            Source = Cmp ;  9 ;  2 ; -1
            Sink = Pnt ;  3 ; -1 ; 0
            PointX = 7410 ; 6900 ; 6900
            PointY = 1275 ; 1275 ; 1200
            }
        Line
            {
            Source = Pnt ;  2 ; -1 ; 0
            Sink = Cmp ;  8 ;  2 ; -1
            PointX = 6900 ; 6900 ; 6900 ; 7335
            PointY = 300 ; 300 ; -75 ; -75
            }
        Line
            {
            Source = Cmp ;  5 ;  2 ; -1
            Sink = Pnt ;  4 ; -1 ; 0
            PointX = 3885 ; 3375 ; 3375
            PointY = 450 ; 450 ; 1200
            }
        Line
            {
            Source = Pnt ;  3 ; -1 ; 0
            Sink = Pnt ;  7 ; -1 ; 0
            PointX = 6900 ; 6900 ; 6900
            PointY = 1200 ; 1200 ; 525
            }
        Line
            {
            Source = Cmp ;  6 ;  1 ; -1
            Sink = Pnt ;  4 ; -1 ; 0
            PointX = 3960 ; 3375 ; 3375
            PointY = 1875 ; 1875 ; 1200
            }
        Line
            {
            Source = Pnt ;  4 ; -1 ; 0
            Sink = Pnt ;  3 ; -1 ; 0
            PointX = 3375 ; 3375 ; 6900 ; 6900
            PointY = 1200 ; 1275 ; 1275 ; 1200
            }
        Line
            {
            Source = Cmp ;  9 ;  1 ; 0
            Sink = Pnt ;  5 ; -1 ; 0
            PointX = 8325 ; 8625 ; 8625 ; 3000 ; 3000
            PointY = 1125 ; 1125 ; 3300 ; 3300 ; 2175
            }
        Line
            {
            Source = Cmp ;  4 ;  2 ; -1
            Sink = Pnt ;  5 ; -1 ; 0
            PointX = 3735 ; 3000 ; 3000
            PointY = -1275 ; -1275 ; 2175
            }
        Line
            {
            Source = Pnt ;  5 ; -1 ; 0
            Sink = Cmp ;  6 ;  2 ; -1
            PointX = 3000 ; 3000 ; 3960
            PointY = 2175 ; 2175 ; 2175
            }
        Line
            {
            Source = Cmp ;  10 ;  1 ; -1
            Sink = Pnt ;  6 ; -1 ; 0
            PointX = 11160 ; 10650 ; 10650 ; 8550
            PointY = 375 ; 375 ; -1125 ; -1125
            }
        Line
            {
            Source = Pnt ;  6 ; -1 ; 0
            Sink = Cmp ;  7 ;  1 ; -1
            PointX = 8550 ; 8550 ; 8985
            PointY = -1125 ; -525 ; -525
            }
        Line
            {
            Source = Cmp ;  10 ;  2 ; -1
            Sink = Pnt ;  7 ; -1 ; 0
            PointX = 11160 ; 6900 ; 6900
            PointY = 600 ; 600 ; 525
            }
        Line
            {
            Source = Pnt ;  7 ; -1 ; 0
            Sink = Pnt ;  2 ; -1 ; 0
            PointX = 6900 ; 6900 ; 6900
            PointY = 525 ; 300 ; 300
            }
        Line
            {
            Source = Cmp ;  10 ;  3 ; -1
            Sink = Cmp ;  3 ;  1 ; 0
            PointX = 11160 ; 10350 ; 10350 ; 6450
            PointY = 825 ; 825 ; 2025 ; 2025
            }
        Line
            {
            Source = Cmp ;  11 ;  1 ; 0
            Sink = Cmp ;  8 ;  1 ; -1
            PointX = 2400 ; 2400 ; 7335
            PointY = -375 ; -375 ; -375
            }
        Line
            {
            Source = Cmp ;  12 ;  1 ; 0
            Sink = Cmp ;  9 ;  1 ; -1
            PointX = 2175 ; 2175 ; 7410
            PointY = 975 ; 975 ; 975
            }
        }
    }
