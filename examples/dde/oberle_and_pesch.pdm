Coupled
    {
    Type = Root
    Name = oberle_and_pesch
    Ports = 0; 0
    Description = Model of Power Devs
    Graphic
        {
        Position = 0; 0
        Dimension = 120; 120
        Direction = Right
        Color = 15
        Icon = None
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Atomic
            {
            Name = QSS Integrator 0
            Ports = 1 ; 1
            Path = qss/qss_integrator.h
            Description = Quantized Integrator (QSS methods) with logartithmic quantization
            Graphic
                {
                Position = 2895 ; -330
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%integrator.svg
                }
            Parameters
                {
                Method = Lst; 3%QSS%QSS2%QSS3%QSS4%BQSS%CQSS%LIQSS%LIQSS2%LIQSS3% ; 
                dqmin = Str; 1e-6 ; minimum quantum (Scilab)
                dqrel = Str; 1e-3 ; relative quantum (0 : uniform) (Scilab)
                x0 = Str; 0 ; Initial state (Scilab)
                }
            }
        Atomic
            {
            Name = NLFunction 0
            Ports = 2 ; 1
            Path = qss/qss_nlfunction.h
            Description = Nonlinear function. (QSS1 to 4)
            Graphic
                {
                Position = 1320 ; -360
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %continuous%nl_function.svg
                }
            Parameters
                {
                Expression = Str; -1.5*u1*(1+u0) ; Expression in terms of u0,u1,....,u9
                Inputs = Str; %Inputs ; 
                }
            }
        Atomic
            {
            Name = Variable Delay 0
            Ports = 2 ; 1
            Path = Qss\dqssv2o3.h
            Description = Variable Delay function (QSS methods). y(t)=u2(t-u1(t))
            Graphic
                {
                Position = 4770 ; -480
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %continuous%vdelay.svg
                }
            Parameters
                {
                tau0 = Str; 1 ; Initial delay time (Scilab)
                y(t<0) = Str; [-2\; -2\; 1\; 0] ; Data History (Scilab)
                }
            }
        Atomic
            {
            Name = Constant 0
            Ports = 0 ; 1
            Path = sources\constant_sci.h
            Description = Constant
            Graphic
                {
                Position = 3345 ; -2355
                Dimension = 675 ; 675
                Direction = Right
                Color = 15
                Icon = %sources%constant.svg
                }
            Parameters
                {
                K = Str; 1 ; Constant output value (Scilab expression)
                }
            }
        Atomic
            {
            Name = GnuPlot 0
            Ports = 1 ; 0
            Path = sinks/gnuplot.h
            Description = Plot input signal using GnuPlot
            Graphic
                {
                Position = 7020 ; 465
                Dimension = 675 ; 720
                Direction = Right
                Color = 15
                Icon = %sinks%gnuplot.svg
                }
            Parameters
                {
                Inputs = Str; %Inputs ; Number of inputs
                Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                Format1 = Str; with lines title 'x' ; Formatting options for input 1
                Format2 = Str;  ; Formatting options for input 2
                Format3 = Str;  ; Formatting options for input 3
                Format4 = Str;  ; Formatting options for input 4
                Format5 = Str;  ; Formatting options for input 5
                }
            }
        Point
            {
            ConectedLines = 2 ; 4 ; 5
            ConectedExtrems = Org ; Org ; Org
            Position = 4275 ; 0
            }
        Point
            {
            ConectedLines = 3 ; 7 ; 8
            ConectedExtrems = Org ; Org ; Org
            Position = 5700 ; 825
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; 0
            Sink = Cmp ;  1 ;  1 ; -1
            PointX = 2100 ; 2760 ; 2760
            PointY = 0 ; 0 ; 0
            }
        Line
            {
            Source = Cmp ;  1 ;  1 ; 0
            Sink = Pnt ;  1 ; -1 ; 0
            PointX = 3675 ; 3675 ; 4275
            PointY = 0 ; 0 ; 0
            }
        Line
            {
            Source = Cmp ;  3 ;  1 ; 0
            Sink = Pnt ;  2 ; -1 ; 0
            PointX = 5550 ; 5700 ; 5700
            PointY = -150 ; -150 ; 825
            }
        Line
            {
            Source = Cmp ;  2 ;  1 ; -1
            Sink = Pnt ;  1 ; -1 ; 0
            PointX = 1185 ; 825 ; 825 ; 4275 ; 4275
            PointY = -150 ; -150 ; -825 ; -825 ; 0
            }
        Line
            {
            Source = Pnt ;  1 ; -1 ; 0
            Sink = Cmp ;  3 ;  2 ; -1
            PointX = 4275 ; 4635 ; 4635
            PointY = 0 ; 0 ; 0
            }
        Line
            {
            Source = Cmp ;  4 ;  1 ; 0
            Sink = Cmp ;  3 ;  1 ; -1
            PointX = 4125 ; 4425 ; 4425 ; 4635
            PointY = -2025 ; -2025 ; -300 ; -300
            }
        Line
            {
            Source = Cmp ;  5 ;  1 ; -1
            Sink = Pnt ;  2 ; -1 ; 0
            PointX = 6885 ; 6885 ; 5700
            PointY = 825 ; 825 ; 825
            }
        Line
            {
            Source = Pnt ;  2 ; -1 ; 0
            Sink = Cmp ;  2 ;  2 ; -1
            PointX = 5700 ; 5700 ; 825 ; 825 ; 1185
            PointY = 825 ; 1275 ; 1275 ; 150 ; 150
            }
        }
    }
