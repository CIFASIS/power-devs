Coupled
    {
    Type = Root
    Name = airs
    Ports = 0; 0
    Description = 
    Graphic
        {
        Position = 0; 0
        Dimension = 0; 0
        Direction = Right
        Color = 15
        Icon = 
        Window = 5000; 5000; 5000; 5000
        }
    Parameters
        {
        }
    System
        {
        Coupled
            {
            Type = Coordinator
            Name = Coupled0
            Ports = 1; 1
            Description = Coupled DEVS model
            Graphic
                {
                Position = -5730; 495
                Dimension = 675; 675
                Direction = Right
                Color = 15
                Icon = %basicelements%coupled.svg
                Window = 5000; 5000; 5000; 5000
                }
            Parameters
                {
                }
            System
                {
                Inport
                    {
                    Name = Inport0
                    CoupledPort = 1
                    Description = 
                    Graphic
                        {
                        Position = -7515 ; 375
                        Dimension = 480
                        Direction = Right
                        }
                    }
                Outport
                    {
                    Name = Outport0
                    CoupledPort = 1
                    Description = 
                    Graphic
                        {
                        Position = 1560 ; 3075
                        Dimension = 480
                        Direction = Right
                        }
                    }
                Atomic
                    {
                    Name = Scilab Command0
                    Ports = 1 ; 0
                    Path = Hybrid\runscilabjob.h
                    Description = Runs Scilab commands at Init, Exit and when receive events.
                    Graphic
                        {
                        Position = -8355 ; -3630
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sinks%scilab.ico
                        }
                    Parameters
                        {
                        Run at Init = Str; CS=200,tha=32,th0=rand(CS,1)*4+18,Cap=rand(CS,1)*100+550,Res=rand(CS,1)*0.4+1.8,Pot=rand(CS,1)*2+13 ; Scilab Job at Init
                        Run at External = Str;  ; Scilab Job when receive event
                        Run at Exit = Str;  ; Scilab Job at Exit
                        }
                    }
                Atomic
                    {
                    Name = Vector QSS_Int0
                    Ports = 1 ; 1
                    Path = vector\qss_integrator_vec.h
                    Description = Quantized Integrator (QSS methods) with logartithmic quantization
                    Graphic
                        {
                        Position = 1320 ; 120
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%integrator.svg
                        }
                    Parameters
                        {
                        Method = Lst; 3%QSS%QSS2%QSS3%QSS4%BQSS%CQSS%LIQSS%LIQSS2%LIQSS3% ; 
                        dqmin = Str; 1e-6 ; minimum quantum (Scilab)
                        dqrel = Str; 1e-3 ; relative quantum (0 : uniform) (Scilab)
                        x0 = Str; th0 ; Initial state (Scilab)
                        Size = Str; CS ; Vector Dimension
                        }
                    }
                Atomic
                    {
                    Name = Vector NRGen0
                    Ports = 0 ; 1
                    Path = vector\normal_gen_vec.h
                    Description = Normal Random Generator (Vectorial)
                    Graphic
                        {
                        Position = -2655 ; -1230
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%nrgen.svg
                        }
                    Parameters
                        {
                        mean = Str; 0 ; Mean Value
                        variance = Str; 1 ; Variance
                        T = Str; 1 ; Period
                        seed = Str;  ; Integer vector or empty string for random seeds
                        Size = Str; CS ; Vector Dimension
                        }
                    }
                Atomic
                    {
                    Name = Scalar_to Vector0
                    Ports = 1 ; 1
                    Path = vector\scalar2vec.h
                    Description = Scalar to Vector Signal. Index -1 propagates the input to all outputs.
                    Graphic
                        {
                        Position = -5805 ; 45
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%scalar2vec.svg
                        }
                    Parameters
                        {
                        Index = Str; -1 ; Signal Index
                        }
                    }
                Atomic
                    {
                    Name = Vector_to Scalar0
                    Ports = 1 ; 1
                    Path = vector\vec2scalar.h
                    Description = Vector to scalar signal
                    Graphic
                        {
                        Position = 3120 ; -1980
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%vec2scalar.svg
                        }
                    Parameters
                        {
                        Index = Str; 0 ; Signal Index
                        }
                    }
                Atomic
                    {
                    Name = Vector Sum0
                    Ports = 1 ; 1
                    Path = vector/vector_sum.h
                    Description = y = K * ( u[0][0] + u[0][1] + ... +  u[0][N])
                    Graphic
                        {
                        Position = -330 ; 2745
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%vecsum.svg
                        }
                    Parameters
                        {
                        K = Str; -1/CS/mean(Pot) ; Gain
                        Size = Str; CS ; Vector Size
                        }
                    }
                Atomic
                    {
                    Name = Vector Hysteresis0
                    Ports = 1 ; 1
                    Path = vector\hyst_vec.h
                    Description = Hysteretic function.
                    Graphic
                        {
                        Position = -2580 ; 120
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%hysteresis.svg
                        }
                    Parameters
                        {
                        xl = Str; -0.5 ; Low input level (Scilab expression).
                        xu = Str; 0.5 ; High input level  (Scilab expression)
                        yl = Str; -Pot ; Low output value  (Scilab expression).
                        yu = Str; 0 ; High output  (Scilab expression)
                        Size = Str; CS ; Vector Dimension
                        }
                    }
                Atomic
                    {
                    Name = Vector WSum1
                    Ports = 2 ; 1
                    Path = vector\qss_sum_vec.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -4005 ; 165
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %vectors%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; 1 ; 
                        K[1] = Str; -1 ; 
                        K[2] = Str; 0 ; 
                        K[3] = Str; 0 ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        Size = Str; CS ; Vector Size
                        }
                    }
                Atomic
                    {
                    Name = Vector WSum0
                    Ports = 4 ; 1
                    Path = vector\qss_sum_vec.h
                    Description = y = K[0] * u0 + K[1] * u1 + ... + K[7] * u7 (QSS1 to 4)
                    Graphic
                        {
                        Position = -330 ; 90
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %vectors%sum.svg
                        }
                    Parameters
                        {
                        K[0] = Str; (Cap.*Res).^(-1) ; 
                        K[1] = Str; (Cap.*Res).^(-1) ; 
                        K[2] = Str; Cap.^(-1) ; 
                        K[3] = Str; -(Cap.*Res).^(-1) ; 
                        K[4] = Str; 0 ; 
                        K[5] = Str; 0 ; 
                        K[6] = Str; 0 ; 
                        K[7] = Str; 0 ; 
                        Inputs = Str; %Inputs ; 
                        Size = Str; CS ; Vector Size
                        }
                    }
                Atomic
                    {
                    Name = Constant0
                    Ports = 0 ; 1
                    Path = sources\constant_sci.h
                    Description = Constant
                    Graphic
                        {
                        Position = -4605 ; -2655
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sources%constant.svg
                        }
                    Parameters
                        {
                        K = Str; tha ; Constant output value (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = Scalar_to Vector1
                    Ports = 1 ; 1
                    Path = vector\scalar2vec.h
                    Description = Scalar to Vector Signal. Index -1 propagates the input to all outputs.
                    Graphic
                        {
                        Position = -2280 ; -2655
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %vectors%scalar2vec.svg
                        }
                    Parameters
                        {
                        Index = Str; -1 ; Signal Index
                        }
                    }
                Atomic
                    {
                    Name = GnuPlot0
                    Ports = 1 ; 0
                    Path = sinks/gnuplot.h
                    Description = Plot input signal using GnuPlot
                    Graphic
                        {
                        Position = 4770 ; -2010
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %sinks%gnuplot.svg
                        }
                    Parameters
                        {
                        Inputs = Str; %Inputs ; Number of inputs
                        Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                        Format1 = Str; with lines title 'Temperature 1' ; Formatting options for input 1
                        Format2 = Str;  ; Formatting options for input 2
                        Format3 = Str;  ; Formatting options for input 3
                        Format4 = Str;  ; Formatting options for input 4
                        Format5 = Str;  ; Formatting options for input 5
                        }
                    }
                Point
                    {
                    ConectedLines = 2 ; 6 ; 16
                    ConectedExtrems = Org ; Org ; Org
                    Position = -675 ; 1950
                    }
                Point
                    {
                    ConectedLines = 1 ; 10 ; 11
                    ConectedExtrems = Org ; Org ; Org
                    Position = -1350 ; 525
                    }
                Point
                    {
                    ConectedLines = 5 ; 15 ; 16
                    ConectedExtrems = Org ; Org ; Org
                    Position = 2400 ; 450
                    }
                Line
                    {
                    Source = Cmp ;  7 ;  1 ; 0
                    Sink = Pnt ;  2 ; -1 ; 0
                    PointX = -1800 ; -1350 ; -1350
                    PointY = 450 ; 450 ; 525
                    }
                Line
                    {
                    Source = Pnt ;  1 ; -1 ; 0
                    Sink = Cmp ;  9 ;  4 ; -1
                    PointX = -675 ; -675 ; -675 ; -465
                    PointY = 1950 ; 1950 ; 675 ; 675
                    }
                Line
                    {
                    Source = Cmp ;  9 ;  1 ; 0
                    Sink = Cmp ;  2 ;  1 ; -1
                    PointX = 450 ; 450 ; 1185
                    PointY = 450 ; 450 ; 450
                    }
                Line
                    {
                    Source = Cmp ;  3 ;  1 ; 0
                    Sink = Cmp ;  9 ;  2 ; -1
                    PointX = -1875 ; -1125 ; -1125 ; -465
                    PointY = -900 ; -900 ; 375 ; 375
                    }
                Line
                    {
                    Source = Cmp ;  2 ;  1 ; 0
                    Sink = Pnt ;  3 ; -1 ; 0
                    PointX = 2100 ; 2100 ; 2400
                    PointY = 450 ; 450 ; 450
                    }
                Line
                    {
                    Source = Cmp ;  8 ;  2 ; -1
                    Sink = Pnt ;  1 ; -1 ; 0
                    PointX = -4140 ; -4275 ; -4275 ; -675
                    PointY = 675 ; 675 ; 1950 ; 1950
                    }
                Line
                    {
                    Source = Cmp ;  8 ;  1 ; 0
                    Sink = Cmp ;  7 ;  1 ; -1
                    PointX = -3225 ; -2715 ; -2715
                    PointY = 525 ; 525 ; 450
                    }
                Line
                    {
                    Source = Cmp ;  4 ;  1 ; 0
                    Sink = Cmp ;  8 ;  1 ; -1
                    PointX = -5025 ; -5025 ; -4140
                    PointY = 375 ; 375 ; 375
                    }
                Line
                    {
                    Source = Prt ;  1 ;  1 ; 0
                    Sink = Cmp ;  4 ;  1 ; -1
                    PointX = -6900 ; -6900 ; -5940
                    PointY = 375 ; 375 ; 375
                    }
                Line
                    {
                    Source = Cmp ;  6 ;  1 ; -1
                    Sink = Pnt ;  2 ; -1 ; 0
                    PointX = -465 ; -1350 ; -1350
                    PointY = 3075 ; 3075 ; 525
                    }
                Line
                    {
                    Source = Pnt ;  2 ; -1 ; 0
                    Sink = Cmp ;  9 ;  3 ; -1
                    PointX = -1350 ; -1350 ; -465
                    PointY = 525 ; 525 ; 525
                    }
                Line
                    {
                    Source = Cmp ;  10 ;  1 ; 0
                    Sink = Cmp ;  11 ;  1 ; -1
                    PointX = -3825 ; -3825 ; -2415
                    PointY = -2325 ; -2325 ; -2325
                    }
                Line
                    {
                    Source = Cmp ;  11 ;  1 ; 0
                    Sink = Cmp ;  9 ;  1 ; -1
                    PointX = -1500 ; -600 ; -600 ; -465
                    PointY = -2325 ; -2325 ; 225 ; 225
                    }
                Line
                    {
                    Source = Cmp ;  5 ;  1 ; 0
                    Sink = Cmp ;  12 ;  1 ; -1
                    PointX = 3900 ; 3900 ; 4635
                    PointY = -1650 ; -1650 ; -1650
                    }
                Line
                    {
                    Source = Cmp ;  5 ;  1 ; -1
                    Sink = Pnt ;  3 ; -1 ; 0
                    PointX = 2985 ; 2400 ; 2400
                    PointY = -1650 ; -1650 ; 450
                    }
                Line
                    {
                    Source = Pnt ;  3 ; -1 ; 0
                    Sink = Pnt ;  1 ; -1 ; 0
                    PointX = 2400 ; 2550 ; 2550 ; -675
                    PointY = 450 ; 450 ; 1950 ; 1950
                    }
                Line
                    {
                    Source = Cmp ;  6 ;  1 ; 0
                    Sink = Prt ;  2 ;  1 ; -1
                    PointX = 450 ; 450 ; 1410
                    PointY = 3075 ; 3075 ; 3075
                    }
                }
            }
                Atomic
                    {
                    Name = Pulse0
                    Ports = 0 ; 1
                    Path = sources\pulse_sci.h
                    Description = Pulse generator
                    Graphic
                        {
                        Position = -7155 ; 495
                        Dimension = 675 ; 675
                        Direction = Right
                        Color = 15
                        Icon = %sources%pulse.svg
                        }
                    Parameters
                        {
                        Base Value = Str; 20 ; Base Value (Scilab expression)
                        Amplitude = Str; 0.5 ; Pulse Amplitude (Scilab expression)
                        Initial Time = Str; 1000 ; Initial Step Time (Scilab expression)
                        Final Time = Str; 2000 ; Final Pulse Time (Scilab expression)
                        }
                    }
                Atomic
                    {
                    Name = GnuPlot0
                    Ports = 1 ; 0
                    Path = sinks/gnuplot.h
                    Description = Plot input signal using GnuPlot
                    Graphic
                        {
                        Position = -3705 ; 465
                        Dimension = 675 ; 720
                        Direction = Right
                        Color = 15
                        Icon = %sinks%gnuplot.svg
                        }
                    Parameters
                        {
                        Inputs = Str; %Inputs ; Number of inputs
                        Format = Str; set xrange [0:%tf] @ set grid @ set title 'Plot' ; General Formatting (use @ as line break)
                        Format1 = Str; with lines title 'Power' ; Formatting options for input 1
                        Format2 = Str;  ; Formatting options for input 2
                        Format3 = Str;  ; Formatting options for input 3
                        Format4 = Str;  ; Formatting options for input 4
                        Format5 = Str;  ; Formatting options for input 5
                        }
                    }
                Line
                    {
                    Source = Cmp ;  2 ;  1 ; 0
                    Sink = Cmp ;  1 ;  1 ; -1
                    PointX = -6375 ; -5865 ; -5865
                    PointY = 825 ; 825 ; 825
                    }
                Line
                    {
                    Source = Cmp ;  1 ;  1 ; 0
                    Sink = Cmp ;  3 ;  1 ; -1
                    PointX = -4950 ; -4950 ; -3840
                    PointY = 825 ; 825 ; 825
                    }
        }
    }
